{"id": "fdiakg", "title": "Update: WSBGod is currently up $192k on his puts", "selftext": "    const fetch = require('node-fetch')\n    const fs = require('fs')\n\n    const holdings = [\n      // CCL (Carnival)\n      { ticker: 'CCL', holding: 'PUT $25.00 04/17/2020 500 @ 1.85' },\n      { ticker: 'CCL', holding: 'PUT $27.50 04/17/2020 500 @ 2.15' },\n      // RCL (Royal Carribean)\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 298 @ 4.20' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 60 @ 4.15' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 2 @ 4.05' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 40 @ 4.10' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 18 @ 2.67' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 27 @ 2.66' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 9 @ 2.68' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 9 @ 2.70' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 9 @ 2.71' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 9 @ 2.69' },\n      { ticker: 'RCL', holding: 'PUT $60.00 04/17/2020 9 @ 2.72' },\n      { ticker: 'RCL', holding: 'PUT $70.00 06/19/2020 30 @ 3.55' },\n      // AAL (American Airlines)\n      { ticker: 'AAL', holding: 'PUT $20.00 05/15/2020 100 @ 1.05' },\n      { ticker: 'AAL', holding: 'PUT $20.00 05/15/2020 100 @ 1.61' },\n      // DIS (Walt Disney)\n      { ticker: 'DIS', holding: 'PUT $110.00 04/17/2020 69 @ 1.42' },\n      // HA (Hawaiian Holdings)\n      { ticker: 'HA', holding: 'PUT $21.00 04/17/2020 50 @ 1.10' },\n      // SPY (SPDR S&amp;P 500 ETF)\n      { ticker: 'SPY', holding: 'PUT $290.00 04/17/2020 220 @ 4.57' },\n      { ticker: 'SPY', holding: 'PUT $270.00 05/15/2020 500 @ 2.03' },\n      { ticker: 'SPY', holding: 'PUT $290.00 05/15/2020 175 @ 5.72' },\n    ]\n\n    const loadPrices = async () =&gt; {\n      if (process.env.FETCH_FRESH) {\n        const tickers = Array.from(new Set(holdings.map(holding =&gt; holding.ticker)))\n        const prices = []\n        for (let i = 0; i &lt; tickers.length; ++i) {\n          const ticker = tickers[i]\n          const response = await fetch(`https://www.optionsprofitcalculator.com/ajax/getOptions?stock=${ticker}&amp;reqId=1`)\n          const responseBody = await response.json()\n          prices.push({\n            ticker,\n            options: responseBody.options\n          })\n        }\n        fs.writeFileSunc('prices.json', JSON.stringify(prices, undefined, 2))\n        return prices\n      }\n      return JSON.parse(fs.readFileSync('prices.json'))\n    }\n\n    const parseHolding = (holding) =&gt; {\n      const [type, strike, expiration, amount, _, price] = holding.split(' ')\n      return {\n        type,\n        strike: strike.replace('$', ''),\n        expiration: expiration.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, '$3-$1-$2'), // MM/DD/YYYY to YYYY-MM-DD format\n        amount: parseFloat(amount),\n        price: parseFloat(price)\n      }\n    }\n\n    const parseStrikeOptions = (strikeOptions) =&gt; {\n      const {\n        l: last,\n        b: bid,\n        a: ask\n      } = strikeOptions\n      return {\n        last: parseFloat(last),\n        bid: parseFloat(bid),\n        ask: parseFloat(ask)\n      }\n    }\n\n    const run = async () =&gt; {\n      const prices = await loadPrices()\n      const pls = []\n      for (let i = 0; i &lt; holdings.length; ++i) {\n        const { ticker, holding } = holdings[i]\n        const tickerOptions = prices.find(price =&gt; price.ticker === ticker)\n        const { type, strike, expiration, amount, price } = parseHolding(holding)\n        const expirationOptions = tickerOptions.options[expiration]\n        if (!expirationOptions) {\n          throw new Error('Expiration options not found')\n        }\n        const expirationOptionsKey = type === 'PUT' ? 'p' : 'c'\n        const strikeOptions = expirationOptions[expirationOptionsKey][strike]\n        if (!strikeOptions) {\n          throw new Error('Strike options not found')\n        }\n        const { last, bid, ask } = parseStrikeOptions(strikeOptions)\n        const value = last * amount * 100 // 100 contracts\n        const paid = price * amount * 100 // 100 contracts\n        const pl = value - paid\n        pls.push({\n          ticker,\n          holding,\n          last,\n          value,\n          paid,\n          pl\n        })\n      }\n      console.log(pls)\n      const paid = pls.reduce((prev, pl) =&gt; prev + pl.paid, 0)\n      const value = pls.reduce((prev, pl) =&gt; prev + pl.value, 0)\n      console.log({\n        paid,\n        value,\n        difference: value - paid\n      })\n    }\n\n    run()\n\n    { paid: 746096, value: 939075, difference: 192979 }", "created_utc": 1583350247, "permalink": "/r/wallstreetbets/comments/fdiakg/update_wsbgod_is_currently_up_192k_on_his_puts/", "is_self": true}